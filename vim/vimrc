
""""""""""""""""""""""""""""""""""""""""""
" Basics
""""""""""""""""""""""""""""""""""""""""""
set showcmd
set number

set background=dark
if filereadable(expand("~/.vimrc_background"))
  let base16colorspace=256
  source ~/.vimrc_background
endif


filetype plugin indent on
syntax on


"" The command that toggles the file explorer, switched to C-k 
nmap <silent> <C-k> :NERDTreeToggle<CR>
"" Go back to the previous buffer
nmap <silent> <Space><Space> :b#<CR> 



"" To set tab to 2 spaces
filetype plugin indent on

" On pressing tab, insert 2 spaces

set expandtab

" " show existing tab with 2 spaces width

set tabstop=4

set softtabstop=4

" " when indenting with '>', use 2 spaces width

set shiftwidth=2
"
"


"V Calling all the plugins
call plug#begin('~/.vim/plugged')

"""Plug 'airblade/vim-gitgutter'

"	Plug 'editorconfig/editorconfig-vim'

"	Plug 'itchyny/lightline.vim'

"	Plug 'junegunn/fzf'

"	Plug 'junegunn/fzf.vim'

"	Plug 'mattn/emmet-vim'

    Plug 'Yggdroot/indentLine'

	Plug 'scrooloose/nerdtree' " toggles the file explorer

	Plug 'terryma/vim-multiple-cursors'

	Plug 'morhetz/gruvbox'

	Plug 'neoclide/coc.nvim', {'branch': 'release'}
    
    Plug 'vim-airline/vim-airline'

	

"	Plug 'kien/ctrlp.vim'

"	Plug 'rking/ag.vim'

"	Plug 'artur-shaik/vim-javacomplete2'

"	Plug 'tpope/vim-eunuch'

"	Plug 'tpope/vim-surround'

"	Plug 'w0rp/ale'
call plug#end()


"""""""""""""" Config for coc and autocompletion"""""""""""""""""""
"""""""""""""
"""""""""
"""""

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
if has("patch-8.1.1564")
  " Recently vim can merge signcolumn and number column into one
  set signcolumn=number
else
  set signcolumn=yes
endif

" Use tab for trigger completion with characters ahead and navigate.
" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by
" other plugin before putting this into your config.
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" Use <c-space> to trigger completion.
if has('nvim')
  inoremap <silent><expr> <c-space> coc#refresh()
else
  inoremap <silent><expr> <c-@> coc#refresh()
endif

" Make <CR> auto-select the first completion item and notify coc.nvim to
" format on enter, <cr> could be remapped by other vim plugin
inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

" GoTo code navigation.
nmap <silent> gd <Plug>(coc-definition)
"nmap <silent> gy <Plug>(coc-type-definition)
"nmap <silent> gi <Plug>(coc-implementation)
"nmap <silent> gr <Plug>(coc-references)
"""""""""""""""""""""END CONFIG COC""""""""""""""""""""""""
"
"""""""""""""""""""""CONFIG FOR VIM-ARILINE"""""""""""""""""""
""""""""
"""""
"""
"To See all opened buffers
let g:airline#extensions#tabline#enabled = 1
"let g:airline#extensions#tabline#left_sep = ' '
"let g:airline#extensions#tabline#left_alt_sep = '|'
